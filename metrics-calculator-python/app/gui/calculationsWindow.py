# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui/calculationsWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pandas as pd
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from app.src.metrics.calculator.metrics_calculator import MetricsCalculator
from app.gui.metricsManualWindow import Ui_Dialog
# import main window
# from mainWindow import Ui_MainWindow


class Ui_metricsWindow(object):
    def setupUi(self, metricsWindow, project_obj, mainWindow):
        self.mainWindow = mainWindow
        self.project_obj = project_obj
        self.window = metricsWindow
        self.classes = MetricsCalculator.calc_noc(self.project_obj.get_files())
        metricsWindow.setObjectName("metricsWindow")
        # set the size
        metricsWindow.setFixedSize(846, 762)
        metricsWindow.setStyleSheet("background-color:#224562;")
        self.projectNameLbl_2 = QtWidgets.QLabel(metricsWindow)
        self.projectNameLbl_2.setGeometry(QtCore.QRect(40, 30, 731, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.projectNameLbl_2.setFont(font)
        self.projectNameLbl_2.setStyleSheet("color: #FFD43B;")
        self.projectNameLbl_2.setObjectName("projectNameLbl_2")
        self.nocLbl = QtWidgets.QLabel(metricsWindow)
        self.nocLbl.setGeometry(QtCore.QRect(550, 70, 261, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.nocLbl.setFont(font)
        self.nocLbl.setStyleSheet("color: #FFD43B;")
        self.nocLbl.setObjectName("nocLbl")
        self.exportExcelBtn = QtWidgets.QPushButton(metricsWindow)
        self.exportExcelBtn.setGeometry(QtCore.QRect(430, 670, 291, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.exportExcelBtn.setFont(font)
        self.exportExcelBtn.setStyleSheet("color:white;\n"
                                          "font-weight: bold;\n"
                                          "background-color: #00A300;")
        self.exportExcelBtn.setObjectName("exportExcelBtn")
        self.backMainBtn = QtWidgets.QPushButton(metricsWindow)
        self.backMainBtn.setGeometry(QtCore.QRect(140, 670, 241, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.backMainBtn.setFont(font)
        self.backMainBtn.setStyleSheet("color:white;\n"
                                       "font-weight: bold;\n"
                                       "background-color: #B68F05;;")
        self.backMainBtn.setObjectName("backMainBtn")
        self.metricsTbl = QtWidgets.QTableWidget(metricsWindow)
        self.metricsTbl.setGeometry(QtCore.QRect(30, 100, 791, 541))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.metricsTbl.setFont(font)
        self.metricsTbl.setStyleSheet("background-color:white;")
        self.metricsTbl.setShowGrid(True)
        self.metricsTbl.setGridStyle(QtCore.Qt.DashLine)
        self.metricsTbl.setRowCount(self.classes + 1)
        self.metricsTbl.setColumnCount(13)
        self.metricsTbl.setObjectName("metricsTbl")
        classNameLbl = QtWidgets.QTableWidgetItem()
        locLbl = QtWidgets.QTableWidgetItem()
        nomLbl = QtWidgets.QTableWidgetItem()
        size2Lbl = QtWidgets.QTableWidgetItem()
        wacLbl = QtWidgets.QTableWidgetItem()
        noccLbl = QtWidgets.QTableWidgetItem()
        ditLbl = QtWidgets.QTableWidgetItem()
        wmpc1Lbl = QtWidgets.QTableWidgetItem()
        wmpc2Lbl = QtWidgets.QTableWidgetItem()
        rfcLbl = QtWidgets.QTableWidgetItem()
        cboLbl = QtWidgets.QTableWidgetItem()
        mpcLbl = QtWidgets.QTableWidgetItem()
        lcomLbl = QtWidgets.QTableWidgetItem()
        _translate = QtCore.QCoreApplication.translate
        index = 1
        for python_file_obj in self.project_obj.get_files():
            for class_obj in python_file_obj.get_file_classes():
                self.metricsTbl.setItem(index, 0, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 0).setText(_translate("metricsWindow", class_obj.get_class_name()))
                self.metricsTbl.setItem(index, 1, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 1).setText(_translate("metricsWindow", str(class_obj.get_size_category_metrics().get_loc())))
                self.metricsTbl.setItem(index, 2, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 2).setText(_translate("metricsWindow", str(class_obj.get_size_category_metrics().get_nom())))
                self.metricsTbl.setItem(index, 3, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 3).setText(_translate("metricsWindow", str(class_obj.get_size_category_metrics().get_size2())))
                self.metricsTbl.setItem(index, 4, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 4).setText(_translate("metricsWindow", str(class_obj.get_size_category_metrics().get_wac())))
                self.metricsTbl.setItem(index, 5, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 5).setText(_translate("metricsWindow", str(class_obj.get_size_category_metrics().get_nocc())))
                self.metricsTbl.setItem(index, 6, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 6).setText(_translate("metricsWindow", str(class_obj.get_complexity_category_metrics().get_dit())))
                self.metricsTbl.setItem(index, 7, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 7).setText(_translate("metricsWindow", str(class_obj.get_complexity_category_metrics().get_wmpc1())))
                self.metricsTbl.setItem(index, 8, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 8).setText(_translate("metricsWindow", str(class_obj.get_complexity_category_metrics().get_wmpc2())))
                self.metricsTbl.setItem(index, 9, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 9).setText(_translate("metricsWindow", str(class_obj.get_complexity_category_metrics().get_rfc())))
                self.metricsTbl.setItem(index, 10, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 10).setText(_translate("metricsWindow", str(class_obj.get_coupling_category_metrics().get_cbo())))
                self.metricsTbl.setItem(index, 11, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 11).setText(_translate("metricsWindow", str(class_obj.get_coupling_category_metrics().get_mpc())))
                self.metricsTbl.setItem(index, 12, QtWidgets.QTableWidgetItem())
                self.metricsTbl.item(index, 12).setText(_translate("metricsWindow", str(class_obj.get_cohesion_category_metrics().get_lcom())))
                index += 1

        self.metricsTbl.setItem(0, 0, classNameLbl)
        self.metricsTbl.setItem(0, 1, locLbl)
        self.metricsTbl.setItem(0, 2, nomLbl)
        self.metricsTbl.setItem(0, 3, size2Lbl)
        self.metricsTbl.setItem(0, 4, wacLbl)
        self.metricsTbl.setItem(0, 5, noccLbl)
        self.metricsTbl.setItem(0, 6, ditLbl)
        self.metricsTbl.setItem(0, 7, wmpc1Lbl)
        self.metricsTbl.setItem(0, 8, wmpc2Lbl)
        self.metricsTbl.setItem(0, 9, rfcLbl)
        self.metricsTbl.setItem(0, 10, cboLbl)
        self.metricsTbl.setItem(0, 11, mpcLbl)
        self.metricsTbl.setItem(0, 12, lcomLbl)
        self.metricsTbl.verticalHeader().setMinimumSectionSize(23)
        self.helpBtn_2 = QtWidgets.QToolButton(metricsWindow)
        self.helpBtn_2.setGeometry(QtCore.QRect(790, 710, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.helpBtn_2.setFont(font)
        self.helpBtn_2.setStyleSheet("color:white;\n"
                                     "font-weight: bold;\n"
                                     "background-color: #B68F05;")
        self.helpBtn_2.setObjectName("helpBtn_2")

        # set click listeners
        self.backMainBtn.clicked.connect(self.backToMain)
        self.helpBtn_2.clicked.connect(self.openManual)
        self.exportExcelBtn.clicked.connect(self.exportToExcel)

        self.retranslateUi(metricsWindow)
        QtCore.QMetaObject.connectSlotsByName(metricsWindow)

    def retranslateUi(self, metricsWindow):
        _translate = QtCore.QCoreApplication.translate
        metricsWindow.setWindowTitle(_translate("metricsWindow", "Calculations"))

        self.projectNameLbl_2.setText(_translate("metricsWindow", "Metrics for " + self.project_obj.get_project_name()))
        self.nocLbl.setText(_translate("metricsWindow", "Classes Found (NOC Metric) = " + str(self.classes)))
        self.exportExcelBtn.setText(_translate("metricsWindow", "Export Results to Excel File"))
        self.backMainBtn.setText(_translate("metricsWindow", "Back to main screen"))
        self.metricsTbl.setSortingEnabled(False)
        __sortingEnabled = self.metricsTbl.isSortingEnabled()
        self.metricsTbl.setSortingEnabled(False)
        classNameLbl = self.metricsTbl.item(0, 0)
        classNameLbl.setText(_translate("metricsWindow", "Class Name"))
        locLbl = self.metricsTbl.item(0, 1)
        locLbl.setText(_translate("metricsWindow", "LOC"))
        nomLbl = self.metricsTbl.item(0, 2)
        nomLbl.setText(_translate("metricsWindow", "NOM"))
        size2Lbl = self.metricsTbl.item(0, 3)
        size2Lbl.setText(_translate("metricsWindow", "SIZE2"))
        wacLbl = self.metricsTbl.item(0, 4)
        wacLbl.setText(_translate("metricsWindow", "WAC"))
        noccLbl = self.metricsTbl.item(0, 5)
        noccLbl.setText(_translate("metricsWindow", "NOCC"))
        ditLbl = self.metricsTbl.item(0, 6)
        ditLbl.setText(_translate("metricsWindow", "DIT"))
        wmpc1Lbl = self.metricsTbl.item(0, 7)
        wmpc1Lbl.setText(_translate("metricsWindow", "WPMC1"))
        wmpc2Lbl = self.metricsTbl.item(0, 8)
        wmpc2Lbl.setText(_translate("metricsWindow", "WMPC2"))
        rfcLbl = self.metricsTbl.item(0, 9)
        rfcLbl.setText(_translate("metricsWindow", "RFC"))
        cboLbl = self.metricsTbl.item(0, 10)
        cboLbl.setText(_translate("metricsWindow", "CBO"))
        mpcLbl = self.metricsTbl.item(0, 11)
        mpcLbl.setText(_translate("metricsWindow", "MPC"))
        lcomLbl = self.metricsTbl.item(0, 12)
        lcomLbl.setText(_translate("metricsWindow", "LCOM"))

        self.metricsTbl.setSortingEnabled(__sortingEnabled)
        self.helpBtn_2.setText(_translate("metricsWindow", "?"))

    # method that goes to main
    def backToMain(self):
        self.mainWindow.show()
        self.window.close()

    def openManual(self):
        self.manualWindow = QtWidgets.QDialog()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self.manualWindow, self.window)
        self.manualWindow.show()
        self.window.close()

    def exportToExcel(self):
        folder_name = QtWidgets.QFileDialog.getExistingDirectory()

        if (folder_name):
            row_count = self.metricsTbl.rowCount()
            column_count = self.metricsTbl.columnCount()

            data = []

            for row in range(row_count):
                rowData = []
                for column in range(column_count):
                    widgetItem = self.metricsTbl.item(row, column)
                    if widgetItem and widgetItem.text:
                        rowData.append(widgetItem.text())
                    else:
                        rowData.append('NULL')

                data.append(rowData)

            df = pd.DataFrame(data)
            header = df.iloc[0]
            df = df[1:]
            df.columns = header

            # filenames = next(os.walk(folder_name))[2]
            output_filename = self.project_obj.get_project_name() + "_results-" + str(int(time.time())) + ".xlsx"

            df.to_excel(folder_name + "\\" + output_filename, header=True, index=False)

            # Success message after saving
            msg_popup = QMessageBox()
            msg_popup.setText(f"Successfully saved {folder_name}/{output_filename}")
            msg_popup.setIcon(QMessageBox.Information)
            msg_popup.setStandardButtons(QMessageBox.Close)
            msg_popup.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    metricsWindow = QtWidgets.QDialog()
    ui = Ui_metricsWindow()
    ui.setupUi(metricsWindow)
    metricsWindow.show()
    sys.exit(app.exec_())
