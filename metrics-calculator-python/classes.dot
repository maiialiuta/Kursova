digraph "classes" {
rankdir=BT
charset="utf-8"
"app.src.entities.class_entity.Class" [color="black", fontcolor="black", label=<{app.src.entities.class_entity.Class|class_ast_node<br ALIGN="LEFT"/>class_name : str<br ALIGN="LEFT"/>cohesion_category_metrics<br ALIGN="LEFT"/>complexity_category_metrics<br ALIGN="LEFT"/>coupling_category_metrics<br ALIGN="LEFT"/>fields : set<br ALIGN="LEFT"/>hierarchy : int<br ALIGN="LEFT"/>methods : dict<br ALIGN="LEFT"/>python_file_obj<br ALIGN="LEFT"/>qmood_category_metrics<br ALIGN="LEFT"/>size_category_metrics<br ALIGN="LEFT"/>|add_field(field)<br ALIGN="LEFT"/>add_method(method_name, params)<br ALIGN="LEFT"/>get_class_ast_node()<br ALIGN="LEFT"/>get_class_name()<br ALIGN="LEFT"/>get_cohesion_category_metrics()<br ALIGN="LEFT"/>get_complexity_category_metrics()<br ALIGN="LEFT"/>get_coupling_category_metrics()<br ALIGN="LEFT"/>get_fields()<br ALIGN="LEFT"/>get_hierarchy()<br ALIGN="LEFT"/>get_methods()<br ALIGN="LEFT"/>get_python_file_obj()<br ALIGN="LEFT"/>get_qmood_category_metrics()<br ALIGN="LEFT"/>get_size_category_metrics()<br ALIGN="LEFT"/>set_hierarchy(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.entities.python_file.PythonFile" [color="black", fontcolor="black", label=<{app.src.entities.python_file.PythonFile|classes : list<br ALIGN="LEFT"/>file_full_path<br ALIGN="LEFT"/>file_name<br ALIGN="LEFT"/>generated_ast<br ALIGN="LEFT"/>project_obj<br ALIGN="LEFT"/>|add_class(class_obj)<br ALIGN="LEFT"/>get_file_classes()<br ALIGN="LEFT"/>get_file_full_path()<br ALIGN="LEFT"/>get_file_name()<br ALIGN="LEFT"/>get_generated_ast()<br ALIGN="LEFT"/>get_project_obj()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.entities.the_project.Project" [color="black", fontcolor="black", label=<{app.src.entities.the_project.Project|project_name<br ALIGN="LEFT"/>python_files : list<br ALIGN="LEFT"/>root_folder_path<br ALIGN="LEFT"/>|add_python_file(python_file_obj)<br ALIGN="LEFT"/>get_files()<br ALIGN="LEFT"/>get_project_name()<br ALIGN="LEFT"/>get_root_folder_path()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.generator.generate_ast.AstGenerator" [color="black", fontcolor="black", label=<{app.src.generator.generate_ast.AstGenerator|project_obj<br ALIGN="LEFT"/>|create_ast(python_file_str, file_name, full_file_path)<br ALIGN="LEFT"/>read_root_project_folder()<br ALIGN="LEFT"/>start_parsing()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.calculator.metrics_calculator.MetricsCalculator" [color="black", fontcolor="black", label=<{app.src.metrics.calculator.metrics_calculator.MetricsCalculator|class_obj<br ALIGN="LEFT"/>curr_dit_class : NoneType<br ALIGN="LEFT"/>|calc_cbo()<br ALIGN="LEFT"/>calc_dit(a_parent_class_object)<br ALIGN="LEFT"/>calc_lcom()<br ALIGN="LEFT"/>calc_loc()<br ALIGN="LEFT"/>calc_mpc()<br ALIGN="LEFT"/>calc_noc(project_files)<br ALIGN="LEFT"/>calc_nocc()<br ALIGN="LEFT"/>calc_nom()<br ALIGN="LEFT"/>calc_rfc()<br ALIGN="LEFT"/>calc_size2()<br ALIGN="LEFT"/>calc_wac()<br ALIGN="LEFT"/>calc_wmpc1()<br ALIGN="LEFT"/>calc_wmpc2()<br ALIGN="LEFT"/>convert_to_actual_parent_objects(class_in_question, my_parent_classes_names_only)<br ALIGN="LEFT"/>return_children(class_in_question)<br ALIGN="LEFT"/>return_max_parent_depth(my_parent_classes_objects)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.categories.cohesion_category.CohesionCategory" [color="black", fontcolor="black", label=<{app.src.metrics.categories.cohesion_category.CohesionCategory|lcom : int<br ALIGN="LEFT"/>|get_lcom()<br ALIGN="LEFT"/>set_lcom(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.categories.complexity_category.ComplexityCategory" [color="black", fontcolor="black", label=<{app.src.metrics.categories.complexity_category.ComplexityCategory|dit : int<br ALIGN="LEFT"/>rfc : int<br ALIGN="LEFT"/>wmpc1 : float<br ALIGN="LEFT"/>wmpc2 : int<br ALIGN="LEFT"/>|get_dit()<br ALIGN="LEFT"/>get_rfc()<br ALIGN="LEFT"/>get_wmpc1()<br ALIGN="LEFT"/>get_wmpc2()<br ALIGN="LEFT"/>set_dit(value)<br ALIGN="LEFT"/>set_rfc(value)<br ALIGN="LEFT"/>set_wmpc1(value)<br ALIGN="LEFT"/>set_wmpc2(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.categories.coupling_category.CouplingCategory" [color="black", fontcolor="black", label=<{app.src.metrics.categories.coupling_category.CouplingCategory|cbo : int<br ALIGN="LEFT"/>mpc : int<br ALIGN="LEFT"/>|get_cbo()<br ALIGN="LEFT"/>get_mpc()<br ALIGN="LEFT"/>set_cbo(value)<br ALIGN="LEFT"/>set_mpc(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.categories.qmood_category.QMOODCategory" [color="black", fontcolor="black", label=<{app.src.metrics.categories.qmood_category.QMOODCategory|effectiveness : float<br ALIGN="LEFT"/>extendability : float<br ALIGN="LEFT"/>flexibility : float<br ALIGN="LEFT"/>functionality : float<br ALIGN="LEFT"/>reusability : float<br ALIGN="LEFT"/>understandability : float<br ALIGN="LEFT"/>|get_effectiveness()<br ALIGN="LEFT"/>get_extendability()<br ALIGN="LEFT"/>get_flexibility()<br ALIGN="LEFT"/>get_functionality()<br ALIGN="LEFT"/>get_reusability()<br ALIGN="LEFT"/>get_understandability()<br ALIGN="LEFT"/>set_effectiveness(value)<br ALIGN="LEFT"/>set_extendability(value)<br ALIGN="LEFT"/>set_flexibility(value)<br ALIGN="LEFT"/>set_functionality(value)<br ALIGN="LEFT"/>set_reusability(value)<br ALIGN="LEFT"/>set_understandability(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.metrics.categories.size_category.SizeCategory" [color="black", fontcolor="black", label=<{app.src.metrics.categories.size_category.SizeCategory|loc : int<br ALIGN="LEFT"/>nocc : int<br ALIGN="LEFT"/>nom : int<br ALIGN="LEFT"/>size2 : int<br ALIGN="LEFT"/>wac : int<br ALIGN="LEFT"/>|get_loc()<br ALIGN="LEFT"/>get_nocc()<br ALIGN="LEFT"/>get_nom()<br ALIGN="LEFT"/>get_size2()<br ALIGN="LEFT"/>get_wac()<br ALIGN="LEFT"/>set_loc(value)<br ALIGN="LEFT"/>set_nocc(value)<br ALIGN="LEFT"/>set_nom(value)<br ALIGN="LEFT"/>set_size2(value)<br ALIGN="LEFT"/>set_wac(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.cc_visitor.CCNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.cc_visitor.CCNodeVisitor|cc : int<br ALIGN="LEFT"/>class_obj<br ALIGN="LEFT"/>|visit_ClassDef(node)<br ALIGN="LEFT"/>visit_For(node)<br ALIGN="LEFT"/>visit_FunctionDef(node)<br ALIGN="LEFT"/>visit_If(node)<br ALIGN="LEFT"/>visit_IfExp(node)<br ALIGN="LEFT"/>visit_Match(node)<br ALIGN="LEFT"/>visit_While(node)<br ALIGN="LEFT"/>visit_comprehension(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.class_attr_visitor.ClassAttrNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.class_attr_visitor.ClassAttrNodeVisitor|class_obj<br ALIGN="LEFT"/>|visit_Name(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.hierarchy_visitor.HierarchyNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.hierarchy_visitor.HierarchyNodeVisitor|class_obj<br ALIGN="LEFT"/>parent_classes_list : list<br ALIGN="LEFT"/>|visit_ClassDef(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.init_visitor.InitCommonsNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.init_visitor.InitCommonsNodeVisitor|curr_class : NoneType<br ALIGN="LEFT"/>python_file<br ALIGN="LEFT"/>|visit_Attribute(node)<br ALIGN="LEFT"/>visit_ClassDef(node)<br ALIGN="LEFT"/>visit_FunctionDef(node)<br ALIGN="LEFT"/>visit_Module(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.lcom_visitor.LCOMNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.lcom_visitor.LCOMNodeVisitor|class_obj<br ALIGN="LEFT"/>fields : set<br ALIGN="LEFT"/>uses_in_method : dict<br ALIGN="LEFT"/>|visit_Attribute(node)<br ALIGN="LEFT"/>visit_ClassDef(node)<br ALIGN="LEFT"/>visit_FunctionDef(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.loc_counter.LOCNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.loc_counter.LOCNodeVisitor|class_obj<br ALIGN="LEFT"/>lines_of_code : int<br ALIGN="LEFT"/>|remove_empty_lines(file_full_path, class_start_line, class_last_line)<br ALIGN="LEFT"/>visit_ClassDef(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.visitors.remote_methods_called_visitor.MethodsCalledNodeVisitor" [color="black", fontcolor="black", label=<{app.src.visitors.remote_methods_called_visitor.MethodsCalledNodeVisitor|called : list<br ALIGN="LEFT"/>class_obj<br ALIGN="LEFT"/>|validate_remote_method(method_name_called, instance_calling_name)<br ALIGN="LEFT"/>visit_Attribute(node)<br ALIGN="LEFT"/>visit_Call(node)<br ALIGN="LEFT"/>visit_ClassDef(node)<br ALIGN="LEFT"/>visit_FunctionDef(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.src.entities.class_entity.Class" -> "app.src.visitors.init_visitor.InitCommonsNodeVisitor" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="curr_class", style="solid"];
}
